import os
from dotenv import load_dotenv
from sqlalchemy import create_engine, Column, Integer, String, Date
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy.exc import SQLAlchemyError

# ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
load_dotenv()

# ‚úÖ –ü–æ–ª—É—á–∞–µ–º URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = os.getenv("DATABASE_URL")

if not DATABASE_URL:
    raise ValueError("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Railway.")

# ‚úÖ –ú–∞—Å–∫–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –ø–µ—Ä–µ–¥ –≤—ã–≤–æ–¥–æ–º –≤ –ª–æ–≥–∏
masked_url = DATABASE_URL.replace(DATABASE_URL.split(':')[2].split('@')[0], '*****')
print(f"‚úÖ DATABASE_URL: {masked_url}")

# ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
try:
    engine = create_engine(
        DATABASE_URL,
        connect_args={'client_encoding': 'utf8'}  # –£–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É
    )
    engine.connect()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞!")
except SQLAlchemyError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
    raise

# ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ORM
Session = scoped_session(sessionmaker(bind=engine))
Base = declarative_base()

# ‚úÖ –ú–æ–¥–µ–ª—å –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
class Booking(Base):
    __tablename__ = 'bookings'
    id = Column(Integer, primary_key=True, autoincrement=True)
    user_id = Column(String(100), nullable=False)
    check_in = Column(Date, nullable=False)
    check_out = Column(Date, nullable=False)
    room_type = Column(String(50), nullable=False)

# ‚úÖ –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def init_db():
    try:
        print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        Base.metadata.create_all(engine)
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã!")
    except SQLAlchemyError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: {e}")
        raise

# ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
def save_booking(user_data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    session = Session()
    try:
        booking = Booking(
            user_id=user_data['user_id'],
            check_in=user_data['check_in'],
            check_out=user_data['check_out'],
            room_type=user_data['room_type']
        )
        session.add(booking)
        session.commit()
        print("‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
    except SQLAlchemyError as e:
        session.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    finally:
        session.close()

# ‚úÖ –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
if __name__ == "__main__":
    init_db()
