import os
import logging
import asyncio
from fastapi import FastAPI, Request
from telegram import Update
from telegram.ext import Application, ApplicationBuilder
from handlers.booking import booking_handler
from handlers.main_menu import main_menu_handler
from database import init_db
from dotenv import load_dotenv
import uvicorn

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)

app = FastAPI()

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

if not BOT_TOKEN:
    raise ValueError("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env –∏–ª–∏ Railway.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞
application = Application.builder().token(BOT_TOKEN).build()
application.add_handler(main_menu_handler)
application.add_handler(booking_handler)

async def start_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    await application.initialize()
    await application.start()
    logging.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
asyncio.create_task(start_bot())

@app.post("/webhook")
async def webhook(request: Request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ Telegram Webhook"""
    update_data = await request.json()
    logging.info(f"üì© –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {update_data}")

    update = Update.de_json(update_data, application.bot)
    await application.process_update(update)

    return {"status": "ok"}

if __name__ == "__main__":
    init_db()
    logging.info("üöÄ –ó–∞–ø—É—Å–∫ FastAPI-—Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ uvicorn...")
    uvicorn.run("app:app", host="0.0.0.0", port=8080, workers=1)
